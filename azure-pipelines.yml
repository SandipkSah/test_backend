trigger:
- main
- stage
- try_docker

variables:
  azureServiceConnection: 'essencif.ai_resources'
  vmImageName: 'ubuntu-latest'
  imageRegistry: 'essencifai-backend'  # Project-specific name
  containerRegistry: 'container-registry'  # Full Azure Container Registry URL
  # containerRegistry: 'essencifaibackendregistry.azurecr.io'  # Full Azure Container Registry URL
  

stages:
- stage: Build
  displayName: Build and Dockerize
  jobs:
  - job: BuildDockerImage
    pool:
      vmImage: $(vmImageName)
    steps:
    # Login to Azure Container Registry (if needed)
    - task: Docker@2
      displayName: Docker login to ACR
      inputs:
        command: login
        containerRegistry: '$(containerRegistry)'

    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        command: buildAndPush
        containerRegistry: '$(containerRegistry)'
        repository: '$(imageRegistry)'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: '$(Build.BuildId)'



- stage: DeployDevelopmentContainer
  displayName: 'Deploy Web App Development'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  variables:
    DEPLOYMENT_APP_SERVICE_CONTAINER: 'essencifai-backend-development-container'
    AZURE_COMPILATION_ENV: 'developmentContainer'

  jobs:
  - deployment: DevelopmentDeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: 'developmentContainer'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: $(azureServiceConnection)
              appType: 'webAppContainer'
              WebAppName: $(DEPLOYMENT_APP_SERVICE_CONTAINER)
              containers: $(containerRegistry)/$(imageRegistry):$(Build.BuildId)
              DockerNamespace: 'essencifaibackendregistry.azurecr.io'
              DockerRepository: $(imageRegistry):$(Build.BuildId)


- stage: DeploytestingContainer
  displayName: 'Deploy Web App testting'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  variables:
    DEPLOYMENT_APP_SERVICE_CONTAINER: 'test-backend-container'
    AZURE_COMPILATION_ENV: 'developmentContainer'

  jobs:
  - deployment: DevelopmentDeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: 'testingContainer'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: $(azureServiceConnection)
              appType: 'webAppContainer'
              WebAppName: $(DEPLOYMENT_APP_SERVICE_CONTAINER)
              containers: $(containerRegistry)/$(imageRegistry):$(Build.BuildId)
              DockerNamespace: 'essencifaibackendregistry.azurecr.io'
              DockerRepository: $(imageRegistry):$(Build.BuildId)
